<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="RecipeMapper">
    <sql id="select-recipe">
        select * from Recipe
    </sql>

    <!-- 인기순 조회 -->
    <select id="getRecipePopularOrdered" resultType="recipe">
        <include refid="select-recipe"/>
        R
        order by (select ifnull(count(-1), 0) from Recipe_like where recipe_id = R.id) desc;
    </select>

    <!-- 최신순 조회 -->
    <select id="getRecipeRecentOrdered" resultType="recipe">
        <include refid="select-recipe"/>
        order by date desc;
    </select>

    <!-- 레시피 검색 -->
    <select id="getRecipeBySearch" parameterType="string" resultType="recipe">
        <include refid="select-recipe"/>
        R
        where
        title like '%${value}%' or ingredient like '%${value}%'
        order by (select ifnull(count(-1), 0) from Recipe_like where recipe_id = R.id) desc;
    </select>

    <select id="getRecipeById" parameterType="int" resultType="recipe">
        <include refid="select-recipe"/>
        where id= #{value}
    </select>

    <insert id="insertRecipe" parameterType="recipe" useGeneratedKeys="true" keyProperty="id">
        insert into Recipe
        (user_id, ingredient, date, title, content)
        values 
        (#{userId}, #{ingredient}, convert_tz(now(),'+00:00','+09:00'), #{title}, #{content})
    </insert>

    <update id="updateRecipe" parameterType="recipe">
        update Recipe
        set
        ingredient = #{ingredient}, date = convert_tz(now(),'+00:00','+09:00'), title = #{title}, content = #{content}
        where id=#{id}
    </update>

    <delete id="deleteRecipe" parameterType="int">
        delete from Recipe
        where id=#{value}
    </delete>

    <!-- 재료 자동완성 -->
    <select id="getProductAutoComplete" parameterType="string" resultType="product">
        select * from Product
        where name like '%${value}%'
    </select>


    <resultMap id="recipeCommentResult" type="recipeCommentParent">
        <collection property="childComment" javaType="arrayList" column="id" ofType="recipeComment" select="getChildComment"/>
    </resultMap>

    <!-- 레시피 댓글 등록 -->
    <insert id="insertComment" parameterType="recipeComment" useGeneratedKeys="true" keyProperty="id">
        insert into Recipe_comment
        (user_id, recipe_id, date, content, parent_id)
        values
        (#{userId}, #{recipeId}, convert_tz(now(),'+00:00','+09:00'), #{content}, #{parentId})
    </insert>

    <!-- 댓글 가져오기 (대댓글 포함) -->
    <select id="getComment" parameterType="int" resultMap="recipeCommentResult">
        select * from Recipe_comment where recipe_id = #{value} and parent_id = 0
    </select>

    <select id="getChildComment" parameterType="recipeComment" resultType="recipeComment">
        select * from Recipe_comment where parent_id = #{id} 
    </select>

    <select id="test" parameterType="int" resultType="recipeComment">
        select * from Recipe_comment where recipe_id = #{value} and parent_id != null
    </select>

    <delete id="deleteComment" parameterType="int">
        delete from Recipe_comment
        where id = #{value}
    </delete>
</mapper>